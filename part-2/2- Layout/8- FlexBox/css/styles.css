/* ==================================================================== */
/*                               0. Root & Reset                        */
/* Basic resets for consistent layout                                   */
/* ==================================================================== */

html {
  font-size: 62.5%; /* 1rem = 10px for easier calculations */
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* ==================================================================== */
/*                              1. display: flex                        */
/* Enables Flexbox layout on the container                              */
/* Default: block (for <div> elements)                                  */
/* Values: flex, inline-flex                                            */
/* -------------------------------------------------------------------- */
/* justify  — positions items along the primary axis                    */
/* align    — positions items along the cross axis                      */
/* content  — distributes groups of items                               */
/* items    — positions individual flex items                           */
/* ==================================================================== */

.gallery {
  border: 3px solid grey;
  display: flex;
  height: 90vh;
}

/* ==================================================================== */
/*                             2. flex-direction                        */
/* Defines the main axis direction                                      */
/* Default: row                                                         */
/* Values: row, row-reverse, column, column-reverse                     */
/* ==================================================================== */

.gallery {
  flex-direction: row;
}

/* ==================================================================== */
/*                           3. justify-content                         */
/* Aligns items along the main axis                                     */
/* Default: flex-start                                                  */
/* Values: flex-start, flex-end, center, space-between, space-around, space-evenly */
/* ==================================================================== */

.gallery {
  justify-content: center;
}

/* ==================================================================== */
/*                             4. align-items                           */
/* Aligns items along the cross axis                                    */
/* Default: stretch                                                     */
/* Values: stretch, flex-start, center, flex-end, baseline              */
/* ==================================================================== */

.gallery {
  align-items: center;
}

/* ==================================================================== */
/*                             5. flex-wrap                             */
/* Controls whether items wrap to a new row if needed                   */
/* Default: nowrap                                                      */
/* Values: nowrap, wrap, wrap-reverse                                   */
/* ==================================================================== */

/* .container {
    flex-wrap: wrap;
} */

/* ==================================================================== */
/*                            6. align-content                          */
/* Controls spacing between wrapped rows (multi-line flex)              */
/* Default: stretch                                                     */
/* Works only if flex-wrap: wrap is set                                 */
/* Values: stretch, flex-start, center, flex-end, space-between, space-around */
/* ==================================================================== */

.gallery {
  align-content: center;
}

/* ==================================================================== */
/*                            7. flex-basis                             */
/* Sets the initial size of the flex item                               */
/* Default: auto (uses width/height if set, otherwise content size)     */
/* Values: auto, <length> (px, rem, %, etc.)                            */

/* ==================================================================== */
/*                            7. flex-basis                             */
/* Sets the initial size of the flex item                               */
/* Default: auto (uses width/height if set, otherwise content size)     */
/* Values: auto, <length> (px, rem, %, etc.)                            */
/* ==================================================================== */
/* When you use flex-basis: auto (the default), the browser uses the    */
/* item's width (for flex-direction: row) or height (for column) as the */
/* base size for layout.                                                */
/* If width or height is set, flex-basis: auto will take that into      */
/* account before distributing space.                                   */
/* If you give flex-basis an explicit value (like 100px), it will       */
/* override width or height for sizing along the main axis.             */
/* flex-basis: 0 means start from zero and share all extra space.       */
/* So, flex-basis: auto means "use item's width/height property or      */
/* content size as the base size for flex calculations".                */
/* ==================================================================== */

/* ==================================================================== */
/*                            8. flex-grow                              */
/* Defines how much an item grows relative to others                    */
/* Default: 0 (item will not grow)                                      */
/* Values: 0 (no growth) to any positive number                         */
/* ==================================================================== */

/* ==================================================================== */
/*                            9. flex-shrink                            */
/* Defines how much an item shrinks if space is tight                   */
/* Default: 1 (can shrink)                                              */
/* Values: 0 (no shrinking) to any positive number                      */
/* ==================================================================== */

/* ==================================================================== */
/*                    10. flex (shorthand: grow, shrink, basis)         */
/* Combines flex-grow, flex-shrink, and flex-basis                      */
/* Default: auto (Equivalent to flex: 1 1 auto)                         */
/* Syntax: flex: <grow> <shrink> <basis>;                               */
/*                                                                      */
/* Here's a visual comparison to help understand how                    */
/* flex: auto behaves differently from other flex values:               */
/* -------------------------------------------------------------------- */
/* | Flex Value  | flex-grow | flex-shrink | flex-basis | Analogy                                   | */
/* |-------------|-----------|-------------|------------|-------------------------------------------| */
/* | flex: none  | 0         | 0           | auto       | Stubborn Box: Won't grow or shrink, stays its natural size. | */
/* | flex: 1     | 1         | 1           | 0          | Greedy Sponge: Grows and shrinks fully, ignores content size. | */
/* | flex: initial | 0       | 1           | auto       | Shy Kid: Won't grow, but shrinks if pushed, respects content. | */
/* | flex: auto  | 1         | 1           | auto       | Team Player: Grows, shrinks, and respects content size. | */
/* -------------------------------------------------------------------- */
/* ==================================================================== */

/* ==================================================================== */
/*                            11. align-self                            */
/* Overrides align-items for a specific item                            */
/* Default: auto (inherits align-items from parent)                     */
/* Values: auto, stretch, flex-start, center, flex-end, baseline        */
/* ==================================================================== */

.box-one {
  align-self: flex-start;
  flex-grow: 2;
  flex-shrink: 0;
}
