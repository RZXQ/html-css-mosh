:root {
  --color-primary: #2584ff;
  --color-secondary: #00d9ff;
  --color-accent: #ff3400;
  --color-headings: #1b0760;
  --color-body: #918ca4;
}

/* Typography */

html {
  /* 62.5% of base browser font size (16px) equals 10px. This simplifies the conversion between rem units and pixels (e.g., 1.5rem = 15px). */
  font-size: 62.5%;
}

body {
  font-family: Inter, Arial, Helvetica, sans-serif;
  font-size: 2.4rem;
  line-height: 1.5;
  color: var(--color-body);
}

h1,
h2,
h3 {
  color: var(--color-headings);
  margin-bottom: 1rem;
}

h1 {
  font-size: 7rem;
}

h2 {
  font-size: 4rem;
}

h3 {
  font-size: 3rem;
}

p {
  margin-top: 0;
}

@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }

  h1 {
    font-size: 8rem;
  }

  h2 {
    font-size: 4rem;
  }

  h3 {
    font-size: 2.4rem;
  }
}

/* Links */
a {
  text-decoration: none;
}

.link-arrow {
  color: var(--color-accent);
  text-transform: uppercase;
  font-size: 2rem;
  font-weight: bold;
}

.link-arrow::after {
  content: "-->";
  margin-left: 5px;
  transition: margin 0.15s;
}

.link-arrow:hover::after {
  margin-left: 10px;
}

@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}

/* 1. Following Object-Oriented CSS (OOCSS) principles, define a generic badge component (.badge) to specify repeated structural styling. Modifiers like specific colors and sizes are handled separately using BEM methodology. */
.badge {
  /* 2. Specify rounded corners clearly (border-radius) to visually distinguish badges, creating a more appealing UI. */
  border-radius: 20px;

  /* 3. Add padding to badges for comfortable spacing around content, enhancing readability and aesthetic appearance. */
  padding: 0.5rem 2rem;

  /* 4. Set font weight to bold (600) to ensure badges stand out clearly on various UI backgrounds. */
  font-weight: 600;

  /* 5. Prevent text wrapping within badges to ensure consistency and maintain visual clarity. Content stays on a single line, regardless of badge content length. */
  white-space: nowrap;

  /* 7. Define default font size for badges as a starting point for general badge structures. */
  font-size: 2rem;
}

/* 6. Use the BEM naming convention clearly (Block__Element--Modifier). These modifier classes (.badge--primary and .badge--secondary) define distinct visual appearances ("skins") applied to the generic badge structure by changing background and text colors. */

.badge--primary {
  background: var(--color-primary);
  color: #fff; /* Text color set explicitly to white for visibility against primary color background */
}

.badge--secondary {
  background: var(--color-secondary);
  color: #fff; /* Text color set explicitly to white for visibility against secondary color background */
}

.badge-small {
  font-size: 1.6rem;
}

@media screen and (min-width: 1024px) {
  .badge {
    font-size: 1.5rem;
  }

  .badge--small {
    font-size: 1.2rem;
  }
}
